{
  "address": "0x71C95911E9a5D330f4D621842EC243EE1343292e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheapWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x06b71f2e887b95499a4876b1d2172bde402c2079eafbd3aaeb26121da635f749",
  "receipt": {
    "to": null,
    "from": "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
    "contractAddress": "0x71C95911E9a5D330f4D621842EC243EE1343292e",
    "transactionIndex": 0,
    "gasUsed": "1047018",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x52f5ee1c211829be44fc638a6f6bd5f20c3068b7721d20892fde88e3fb06e1f6",
    "transactionHash": "0x06b71f2e887b95499a4876b1d2172bde402c2079eafbd3aaeb26121da635f749",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1047018",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8464135c8F25Da09e49BC8782676a84730C318bC"
  ],
  "numDeployments": 1,
  "solcInputHash": "fa90fd734b9842b468655354a1ab6434",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheapWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Naresh Choudhary\",\"details\":\"this implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"this implements price feeds as our library\"}},\"title\":\"A contract for crowd funding.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function Fund this contract\"}},\"notice\":\"this contract is to demo a simple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.15;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding.\\n * @author Naresh Choudhary\\n * @notice this contract is to demo a simple funding contract\\n * @dev this implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    //state variables!\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n    address private immutable i_owner;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmount;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    //modifiers!\\n    modifier OnlyOwner() {\\n        //require(msg.sender == i_owner, \\\"You are not the Owner of contract\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    //functions inorder !\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function Fund this contract\\n     * @dev this implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\" Not enough money send :( \\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmount[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public OnlyOwner {\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            address funder = s_funders[i];\\n            s_addressToAmount[funder] = 0;\\n        }\\n        //reseting s_funders Array to empty:\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Transaction failed due to some error\\\");\\n    }\\n\\n    function cheapWithdraw() public OnlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address funder = funders[i];\\n            s_addressToAmount[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Trasaction failed due to some error\\\");\\n    }\\n\\n    //view or pure functions:\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmount(address funder) public view returns (uint256) {\\n        return s_addressToAmount[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x82a943a22cc37f96c89e0c021197bee7c6343602750c8f8873777252e3be1c67\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        // ABI\\n        // address : 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\n        //Eth in USD\\n        // in 8 decimals\\n        return (uint256)(price * 1e10);\\n    }\\n\\n    function getVersion(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256){\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\n\\n        return ethAmountInUSD;\\n    }\\n}\",\"keccak256\":\"0x9a3c6282d144de0cdce2d823d88aab80f77b0d921acf401db2659f53812bb4cb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200131d3803806200131d83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516111966200018760003960008181610308015281816104fe015281816105cc0152818161075f015261083b01526111966000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011c578063b60d428814610147578063c0f8cffc14610151578063d7b4750c1461018e5761008e565b8063206ddccd146100985780633ccfd60b146100af5780636b69a592146100c6578063893d20e8146100f15761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad610306565b005b3480156100bb57600080fd5b506100c46105ca565b005b3480156100d257600080fd5b506100db61082a565b6040516100e89190610aa6565b60405180910390f35b3480156100fd57600080fd5b50610106610837565b6040516101139190610b02565b60405180910390f35b34801561012857600080fd5b5061013161085f565b60405161013e9190610b7c565b60405180910390f35b61014f6101cb565b005b34801561015d57600080fd5b5061017860048036038101906101739190610bc8565b610889565b6040516101859190610aa6565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b09190610c21565b6108d2565b6040516101c29190610b02565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461091990919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610cab565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102fd9190610cfa565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561040e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103c4575b5050505050905060005b815181101561049957600082828151811061043657610435610d2e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049190610d5d565b915050610418565b50600067ffffffffffffffff8111156104b5576104b4610da5565b5b6040519080825280602002602001820160405280156104e35781602001602082028036833780820191505090505b50600090805190602001906104f99291906109e6565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161054090610e05565b60006040518083038185875af1925050503d806000811461057d576040519150601f19603f3d011682016040523d82523d6000602084013e610582565b606091505b50509050806105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd90610e8c565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156106fa57600080828154811061067457610673610d2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106f290610d5d565b915050610652565b50600067ffffffffffffffff81111561071657610715610da5565b5b6040519080825280602002602001820160405280156107445781602001602082028036833780820191505090505b506000908051906020019061075a9291906109e6565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107a190610e05565b60006040518083038185875af1925050503d80600081146107de576040519150601f19603f3d011682016040523d82523d6000602084013e6107e3565b606091505b5050905080610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e90610f1e565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082815481106108e7576108e6610d2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061092583610955565b90506000670de0b6b3a7640000858361093e9190610f3e565b6109489190610faf565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c7919061106d565b5050509150506402540be400816109de91906110e8565b915050919050565b828054828255906000526020600020908101928215610a5f579160200282015b82811115610a5e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a06565b5b509050610a6c9190610a70565b5090565b5b80821115610a89576000816000905550600101610a71565b5090565b6000819050919050565b610aa081610a8d565b82525050565b6000602082019050610abb6000830184610a97565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aec82610ac1565b9050919050565b610afc81610ae1565b82525050565b6000602082019050610b176000830184610af3565b92915050565b6000819050919050565b6000610b42610b3d610b3884610ac1565b610b1d565b610ac1565b9050919050565b6000610b5482610b27565b9050919050565b6000610b6682610b49565b9050919050565b610b7681610b5b565b82525050565b6000602082019050610b916000830184610b6d565b92915050565b600080fd5b610ba581610ae1565b8114610bb057600080fd5b50565b600081359050610bc281610b9c565b92915050565b600060208284031215610bde57610bdd610b97565b5b6000610bec84828501610bb3565b91505092915050565b610bfe81610a8d565b8114610c0957600080fd5b50565b600081359050610c1b81610bf5565b92915050565b600060208284031215610c3757610c36610b97565b5b6000610c4584828501610c0c565b91505092915050565b600082825260208201905092915050565b7f204e6f7420656e6f756768206d6f6e65792073656e64203a2820000000000000600082015250565b6000610c95601a83610c4e565b9150610ca082610c5f565b602082019050919050565b60006020820190508181036000830152610cc481610c88565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0582610a8d565b9150610d1083610a8d565b9250828201905080821115610d2857610d27610ccb565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6882610a8d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d9a57610d99610ccb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610def600083610dd4565b9150610dfa82610ddf565b600082019050919050565b6000610e1082610de2565b9150819050919050565b7f54726173616374696f6e206661696c65642064756520746f20736f6d6520657260008201527f726f720000000000000000000000000000000000000000000000000000000000602082015250565b6000610e76602383610c4e565b9150610e8182610e1a565b604082019050919050565b60006020820190508181036000830152610ea581610e69565b9050919050565b7f5472616e73616374696f6e206661696c65642064756520746f20736f6d65206560008201527f72726f7200000000000000000000000000000000000000000000000000000000602082015250565b6000610f08602483610c4e565b9150610f1382610eac565b604082019050919050565b60006020820190508181036000830152610f3781610efb565b9050919050565b6000610f4982610a8d565b9150610f5483610a8d565b9250828202610f6281610a8d565b91508282048414831517610f7957610f78610ccb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fba82610a8d565b9150610fc583610a8d565b925082610fd557610fd4610f80565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fff81610fe0565b811461100a57600080fd5b50565b60008151905061101c81610ff6565b92915050565b6000819050919050565b61103581611022565b811461104057600080fd5b50565b6000815190506110528161102c565b92915050565b60008151905061106781610bf5565b92915050565b600080600080600060a0868803121561108957611088610b97565b5b60006110978882890161100d565b95505060206110a888828901611043565b94505060406110b988828901611058565b93505060606110ca88828901611058565b92505060806110db8882890161100d565b9150509295509295909350565b60006110f382611022565b91506110fe83611022565b925082820261110c81611022565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561114457611143610ccb565b5b828205841483151761115957611158610ccb565b5b509291505056fea26469706673582212200c96419ac4c8d0f82ed645c673fde5a81e23e8369a3b06f253a4065fcb81c7ff64736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011c578063b60d428814610147578063c0f8cffc14610151578063d7b4750c1461018e5761008e565b8063206ddccd146100985780633ccfd60b146100af5780636b69a592146100c6578063893d20e8146100f15761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100ad610306565b005b3480156100bb57600080fd5b506100c46105ca565b005b3480156100d257600080fd5b506100db61082a565b6040516100e89190610aa6565b60405180910390f35b3480156100fd57600080fd5b50610106610837565b6040516101139190610b02565b60405180910390f35b34801561012857600080fd5b5061013161085f565b60405161013e9190610b7c565b60405180910390f35b61014f6101cb565b005b34801561015d57600080fd5b5061017860048036038101906101739190610bc8565b610889565b6040516101859190610aa6565b60405180910390f35b34801561019a57600080fd5b506101b560048036038101906101b09190610c21565b6108d2565b6040516101c29190610b02565b60405180910390f35b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461091990919063ffffffff16565b101561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024290610cab565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102fd9190610cfa565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561040e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103c4575b5050505050905060005b815181101561049957600082828151811061043657610435610d2e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049190610d5d565b915050610418565b50600067ffffffffffffffff8111156104b5576104b4610da5565b5b6040519080825280602002602001820160405280156104e35781602001602082028036833780820191505090505b50600090805190602001906104f99291906109e6565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161054090610e05565b60006040518083038185875af1925050503d806000811461057d576040519150601f19603f3d011682016040523d82523d6000602084013e610582565b606091505b50509050806105c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bd90610e8c565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156106fa57600080828154811061067457610673610d2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106f290610d5d565b915050610652565b50600067ffffffffffffffff81111561071657610715610da5565b5b6040519080825280602002602001820160405280156107445781602001602082028036833780820191505090505b506000908051906020019061075a9291906109e6565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107a190610e05565b60006040518083038185875af1925050503d80600081146107de576040519150601f19603f3d011682016040523d82523d6000602084013e6107e3565b606091505b5050905080610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e90610f1e565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008082815481106108e7576108e6610d2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061092583610955565b90506000670de0b6b3a7640000858361093e9190610f3e565b6109489190610faf565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c7919061106d565b5050509150506402540be400816109de91906110e8565b915050919050565b828054828255906000526020600020908101928215610a5f579160200282015b82811115610a5e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a06565b5b509050610a6c9190610a70565b5090565b5b80821115610a89576000816000905550600101610a71565b5090565b6000819050919050565b610aa081610a8d565b82525050565b6000602082019050610abb6000830184610a97565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610aec82610ac1565b9050919050565b610afc81610ae1565b82525050565b6000602082019050610b176000830184610af3565b92915050565b6000819050919050565b6000610b42610b3d610b3884610ac1565b610b1d565b610ac1565b9050919050565b6000610b5482610b27565b9050919050565b6000610b6682610b49565b9050919050565b610b7681610b5b565b82525050565b6000602082019050610b916000830184610b6d565b92915050565b600080fd5b610ba581610ae1565b8114610bb057600080fd5b50565b600081359050610bc281610b9c565b92915050565b600060208284031215610bde57610bdd610b97565b5b6000610bec84828501610bb3565b91505092915050565b610bfe81610a8d565b8114610c0957600080fd5b50565b600081359050610c1b81610bf5565b92915050565b600060208284031215610c3757610c36610b97565b5b6000610c4584828501610c0c565b91505092915050565b600082825260208201905092915050565b7f204e6f7420656e6f756768206d6f6e65792073656e64203a2820000000000000600082015250565b6000610c95601a83610c4e565b9150610ca082610c5f565b602082019050919050565b60006020820190508181036000830152610cc481610c88565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0582610a8d565b9150610d1083610a8d565b9250828201905080821115610d2857610d27610ccb565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d6882610a8d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d9a57610d99610ccb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610def600083610dd4565b9150610dfa82610ddf565b600082019050919050565b6000610e1082610de2565b9150819050919050565b7f54726173616374696f6e206661696c65642064756520746f20736f6d6520657260008201527f726f720000000000000000000000000000000000000000000000000000000000602082015250565b6000610e76602383610c4e565b9150610e8182610e1a565b604082019050919050565b60006020820190508181036000830152610ea581610e69565b9050919050565b7f5472616e73616374696f6e206661696c65642064756520746f20736f6d65206560008201527f72726f7200000000000000000000000000000000000000000000000000000000602082015250565b6000610f08602483610c4e565b9150610f1382610eac565b604082019050919050565b60006020820190508181036000830152610f3781610efb565b9050919050565b6000610f4982610a8d565b9150610f5483610a8d565b9250828202610f6281610a8d565b91508282048414831517610f7957610f78610ccb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fba82610a8d565b9150610fc583610a8d565b925082610fd557610fd4610f80565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fff81610fe0565b811461100a57600080fd5b50565b60008151905061101c81610ff6565b92915050565b6000819050919050565b61103581611022565b811461104057600080fd5b50565b6000815190506110528161102c565b92915050565b60008151905061106781610bf5565b92915050565b600080600080600060a0868803121561108957611088610b97565b5b60006110978882890161100d565b95505060206110a888828901611043565b94505060406110b988828901611058565b93505060606110ca88828901611058565b92505060806110db8882890161100d565b9150509295509295909350565b60006110f382611022565b91506110fe83611022565b925082820261110c81611022565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561114457611143610ccb565b5b828205841483151761115957611158610ccb565b5b509291505056fea26469706673582212200c96419ac4c8d0f82ed645c673fde5a81e23e8369a3b06f253a4065fcb81c7ff64736f6c63430008120033",
  "devdoc": {
    "author": "Naresh Choudhary",
    "details": "this implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "this implements price feeds as our library"
      }
    },
    "title": "A contract for crowd funding.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function Fund this contract"
      }
    },
    "notice": "this contract is to demo a simple funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}